/*
 * This program was written by Alexander John for educational purposes.
 *
 * Preprocessor directives
 *
 * Preprocessor directives are lines included in the code of
 * programs preceded by a hash sign (#). These lines are not
 * program statements but directives for the preprocessor.
 * The preprocessor examines the code before actual compilation
 * of code begins and resolves all these directives before any
 * code is actually generated by regular statements.
 *
 * These preprocessor directives extend only across a single
 * line of code. As soon as a newline character is found, the
 * preprocessor directive ends. The only way a preprocessor
 * directive can extend through more than one line is by
 * preceding the newline character at the end of the line by a
 * backslash (\).
 *
 * There are a couple different directive macros (#define, #ifdef, #error, ...). I will focus on
 * the #define macro. The syntax is:
 *
 * #define identifier replacement
 *
 *
 */
#include <iostream>

#define SIZE 100

int main() {
    std::cout << "Hello, World!" << std::endl;

    int size = SIZE;

    std::cout << size << std::endl;

    return 0;
}
